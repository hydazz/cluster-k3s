---
{{- with .Values.qbittorrent }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorrent
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/instance: qbittorrent
    app.kubernetes.io/name: qbittorrent
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: qbittorrent
      app.kubernetes.io/name: qbittorrent
  template:
    metadata:
      annotations:
        backup.velero.io/backup-volumes: appdata
      labels:
        app.kubernetes.io/instance: qbittorrent
        app.kubernetes.io/name: qbittorrent
    spec:
      nodeSelector:
{{ toYaml .nodeSelector | indent 8 }}
      containers:
        - name: qbittorrent
          image: {{ .image }}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
            capabilities:
              add:
                - sysctl net.ipv4.conf.all.src_valid_mark=1
          env:
            - name: VPN_ENABLED
              value: "yes"
            - name: VPN_PROV
              value: "custom"
            - name: VPN_CLIENT
              value: "wireguard"
            - name: VPN_INPUT_PORTS
              value: "54913"
            - name: LAN_NETWORK
              value: "192.168.0.0/16, 10.233.64.0/18, 10.233.0.0/18"
            - name: NAME_SERVERS
              value: "1.1.1.1"
            - name: PUID
              value: "1001"
            - name: PGID
              value: "1001"
            - name: TZ
              value: "Australia/Melbourne"
          resources:
{{ toYaml .resources | indent 12 }}
          ports:
            - name: web
              containerPort: {{ .port }}
          volumeMounts:
            - name: appdata
              mountPath: /config
            - name: nfs-media-data
              mountPath: /data
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 30
            timeoutSeconds: 2
            tcpSocket:
              port: {{ .port }}
          startupProbe:
            failureThreshold: 10
            timeoutSeconds: 2
            tcpSocket:
              port: {{ .port }}
      restartPolicy: Always
      volumes:
        - name: appdata
          persistentVolumeClaim:
            claimName: qbittorrent-appdata-pvc
        - name: nfs-media-data
          nfs:
            path: "/mnt/Slow/Media"
            server: "10.0.3.7"
---

apiVersion: v1
kind: Service
metadata:
  name: qbittorrent
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    app.kubernetes.io/instance: qbittorrent
    app.kubernetes.io/name: qbittorrent
  ports:
    - name: qbittorrent
      protocol: TCP
      port: {{ .port }}

{{- end }}
