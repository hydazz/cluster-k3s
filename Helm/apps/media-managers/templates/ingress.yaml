---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flaresolverr
  namespace: {{ $.Release.Namespace }}
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "*.k3s.hyde.services"
      secretName: wildcard.hyde.services
  rules:
    - host: flaresolverr.k3s.hyde.services
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: flaresolverr
                port:
                  number: {{ .Values.flaresolverr.port }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr
  namespace: {{ $.Release.Namespace }}
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "*.k3s.hyde.services"
      secretName: wildcard.hyde.services
  rules:
    - host: sonarr.k3s.hyde.services
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: sonarr
                port:
                  number: {{ .Values.sonarr.port }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prowlarr
  namespace: {{ $.Release.Namespace }}
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "*.k3s.hyde.services"
      secretName: wildcard.hyde.services
  rules:
    - host: prowlarr.k3s.hyde.services
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: prowlarr
                port:
                  number: {{ .Values.prowlarr.port }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: radarr
  namespace: {{ $.Release.Namespace }}
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "*.k3s.hyde.services"
      secretName: wildcard.hyde.services
  rules:
    - host: radarr.k3s.hyde.services
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: radarr
                port:
                  number: {{ .Values.radarr.port }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lidarr
  namespace: {{ $.Release.Namespace }}
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "*.k3s.hyde.services"
      secretName: wildcard.hyde.services
  rules:
    - host: lidarr.k3s.hyde.services
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: lidarr
                port:
                  number: {{ .Values.lidarr.port }}