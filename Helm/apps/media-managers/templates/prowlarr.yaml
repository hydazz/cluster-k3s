---
{{- with .Values.prowlarr }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/instance: prowlarr
    app.kubernetes.io/name: prowlarr
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: prowlarr
      app.kubernetes.io/name: prowlarr
  template:
    metadata:
      annotations:
        backup.velero.io/backup-volumes: appdata
      labels:
        app.kubernetes.io/instance: prowlarr
        app.kubernetes.io/name: prowlarr
    spec:
      containers:
        - name: prowlarr
          image: {{ .image }}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
          env:
            - name: PUID
              value: "1001"
            - name: GUID
              value: "1001"
{{- if .resources }}
          resources:
{{ toYaml .resources | indent 22 }}
{{- end }}
          ports:
            - name: web
              containerPort: {{ .port }}
          volumeMounts:
            - name: appdata
              mountPath: /config
          livenessProbe:
            failureThreshold: 10
            initialDelaySeconds: 30
            timeoutSeconds: 2
            tcpSocket:
              port: {{ .port }}
          startupProbe:
            failureThreshold: 10
            timeoutSeconds: 2
            tcpSocket:
              port: {{ .port }}
      restartPolicy: Always
      volumes:
        - name: appdata
          persistentVolumeClaim:
            claimName: prowlarr-appdata-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: prowlarr
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    app.kubernetes.io/instance: prowlarr
    app.kubernetes.io/name: prowlarr
  ports:
    - name: prowlarr
      protocol: TCP
      port: {{ .port }}

{{- end }}
