---
{{- with .Values.plex }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: plex
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/instance: plex
    app.kubernetes.io/name: plex
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: plex
      app.kubernetes.io/name: plex
  template:
    metadata:
      annotations:
        backup.velero.io/backup-volumes: appdata
      labels:
        app.kubernetes.io/instance: plex
        app.kubernetes.io/name: plex
    spec:
      initContainers:
        - name: init-permissions
          image: busybox
          command: ['sh', '-c', 'chown -R 1001:1001 /transcode && chmod -R 775 /transcode']
          volumeMounts:
            - name: transcode
              mountPath: /transcode
      runtimeClassName: nvidia
      containers:
        - name: plex
          image: {{ .image }}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
          env:
            - name: PUID
              value: "1001"
            - name: PGID
              value: "1001"
            - name: VERSION
              value: "latest"
            - name: TZ
              value: "Australia/Melbourne"
          resources:
{{ toYaml .resources | indent 12 }}
          ports:
            - name: web
              containerPort: 32400
          volumeMounts:
            - name: appdata
              mountPath: /config
            - name: transcode
              mountPath: /transcode
            - name: nfs-media-data
              mountPath: /media
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 30
            timeoutSeconds: 2
            exec:
              command:
                - /bin/sh
                - -c
                - curl --insecure --fail --silent https://localhost:32400/web || exit 1
          startupProbe:
            failureThreshold: 10
            timeoutSeconds: 2
            exec:
              command:
                - /bin/sh
                - -c
                - curl --insecure --fail --silent https://localhost:32400/web || exit 1

      restartPolicy: Always
      nodeSelector:
        nvidia.com/gpu.present: "true"
      volumes:
        - name: appdata
          persistentVolumeClaim:
            claimName: plex-appdata-pvc
        - name: transcode
          emptyDir: {}
        - name: nfs-media-data
          nfs:
            path: "/mnt/Slow/Media/Plex Media"
            server: "10.0.3.7"

---
apiVersion: v1
kind: Service
metadata:
  name: plex-loadbalancer
  namespace: {{ $.Release.Namespace }}
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    app.kubernetes.io/instance: plex
    app.kubernetes.io/name: plex
  ports:
{{- range .ports.loadbalancer }}
    - name: {{ .name }}
      port: {{ .port }}
      protocol: {{ .protocol }}
      targetPort: {{ .port }}
{{- end }}
{{- end }}
