---
{{- with .Values.plex }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: plex
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/instance: plex
    app.kubernetes.io/name: plex
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: plex
      app.kubernetes.io/name: plex
  template:
    metadata:
      annotations:
        backup.velero.io/backup-volumes: appdata
      labels:
        app.kubernetes.io/instance: plex
        app.kubernetes.io/name: plex
    spec:
{{- if .force_gpu_node }}
      runtimeClassName: nvidia
{{- end }}
      containers:
        - name: plex
          image: {{ .image }}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
          env:
            - name: PUID
              value: "1001"
            - name: GUID
              value: "1001"
            - name: VERSION
              value: "latest"
{{- if .resources }}
          resources:
{{ toYaml .resources | indent 13 }}
{{- end }}
          ports:
            - name: web
              containerPort: 32400
          volumeMounts:
            - name: appdata
              mountPath: /config
            - name: transcode
              mountPath: /transcode
            - name: nfs-media-data
              mountPath: /media
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 30
            timeoutSeconds: 2
            tcpSocket:
              port: 32400
          startupProbe:
            failureThreshold: 10
            timeoutSeconds: 2
            tcpSocket:
              port: 32400
      restartPolicy: Always
      nodeSelector:
      volumes:
        - name: appdata
          persistentVolumeClaim:
            claimName: plex-appdata-pvc
        - name: transcode
          persistentVolumeClaim:
            claimName: plex-transcode-pvc
        - name: nfs-media-data
          nfs:
            path: "/mnt/Slow/Media/Plex Media"
            server: "10.0.3.7"

---
apiVersion: v1
kind: Service
metadata:
  name: plex-loadbalancer
  namespace: {{ $.Release.Namespace }}
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  selector:
    app.kubernetes.io/instance: plex
    app.kubernetes.io/name: plex
  ports:
{{- range .ports.loadbalancer }}
    - name: {{ .name }}
      port: {{ .port }}
      protocol: {{ .protocol }}
      targetPort: {{ .port }}
{{- end }}
{{- end }}
