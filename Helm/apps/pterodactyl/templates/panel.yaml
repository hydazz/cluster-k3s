---
{{- with .Values.pterodactyl }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pterodactyl
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/instance: pterodactyl
    app.kubernetes.io/name: pterodactyl
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: pterodactyl
      app.kubernetes.io/name: pterodactyl
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: pterodactyl
        app.kubernetes.io/name: pterodactyl
    spec:
      containers:
        - name: pterodactyl
          image: {{ .image }}
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
          env:
            - name: APP_URL
              value: "{{ .appUrl }}"
            - name: APP_TIMEZONE
              value: "{{ .appTimezone }}"
            - name: APP_SERVICE_AUTHOR
              value: "{{ .appServiceAuthor }}"
            - name: APP_ENV
              value: "production"
            - name: APP_ENVIRONMENT_ONLY
              value: "false"
            - name: DB_HOST
              value: "{{ .dbHost }}"
            - name: DB_DATABASE
              value: "{{ .dbDatabase }}"
            - name: DB_PORT
              value: "{{ .dbPort }}"
            - name: DB_USERNAME
              value: "{{ .dbUser }}"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pterodactyl-secrets
                  key: dbPassword
            - name: CACHE_DRIVER
              value: "redis"
            - name: SESSION_DRIVER
              value: "redis"
            - name: QUEUE_DRIVER
              value: "redis"
            - name: REDIS_HOST
              value: "{{ .redisHost }}"
            - name: MAIL_FROM
              value: "{{ .mailFrom }}"
            - name: MAIL_DRIVER
              value: "{{ .mailDriver }}"
            - name: MAIL_HOST
              value: "{{ .mailHost }}"
            - name: MAIL_PORT
              value: "{{ .mailPort }}"
            - name: MAIL_ENCRYPTION
              value: "{{ .mailEncryption }}"
            - name: MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pterodactyl-secrets
                  key: mailPassword
            - name: TRUSTED_PROXIES
              value: "*"
          resources:
{{ toYaml .resources | indent 12 }}
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          volumeMounts:
          - mountPath: /app/var/
            name: pterodactyl-data
          - mountPath: /etc/nginx/http.d/
            name: pterodactyl-nginx
          - mountPath: /etc/letsencrypt/
            name: pterodactyl-certs
          - mountPath: /app/storage/logs
            name: pterodactyl-logs
          livenessProbe:
            failureThreshold: 5
            initialDelaySeconds: 15
            timeoutSeconds: 5
            httpGet:
              path: /
              port: http
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            timeoutSeconds: 2
            httpGet:
              path: /
              port: http

      restartPolicy: Always
      volumes:
        - name: pterodactyl-data
          persistentVolumeClaim:
            claimName: pterodactyl-data-pvc
        - name: pterodactyl-nginx
          persistentVolumeClaim:
            claimName: pterodactyl-nginx-pvc
        - name: pterodactyl-certs
          persistentVolumeClaim:
            claimName: pterodactyl-certs-pvc
        - name: pterodactyl-logs
          persistentVolumeClaim:
            claimName: pterodactyl-logs-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: pterodactyl
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    app.kubernetes.io/instance: pterodactyl
    app.kubernetes.io/name: pterodactyl
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https

{{- end }}
