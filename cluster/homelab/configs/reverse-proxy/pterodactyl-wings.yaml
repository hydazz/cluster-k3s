# Discovery
apiVersion: v1
kind: Service
metadata:
  name: wing-discovery
  namespace: reverse-proxy
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP

---
apiVersion: v1
kind: Endpoints
metadata:
  name: wing-discovery
  namespace: reverse-proxy
subsets:
  - addresses:
      - ip: 192.168.100.7
    ports:
      - port: 8080

# Voyager
# apiVersion: v1
# kind: Service
# metadata:
#   name: wing-voyager
#   namespace: reverse-proxy
# spec:
#   type: ClusterIP
#   ports:
#     - name: http
#       port: 8080
#       targetPort: 8080
#       protocol: TCP
#
# ---
# apiVersion: v1
# kind: Endpoints
# metadata:
#   name: wing-voyager
#   namespace: reverse-proxy
# subsets:
#   - addresses:
#       - ip: 192.168.100.8
#     ports:
#       - port: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: wing-ingress
  namespace: reverse-proxy
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
    nginx.ingress.kubernetes.io/secure-backends: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: internal-nginx
  tls:
    - hosts:
        # - voyager.wing.hyde.services
        - discovery.wing.hyde.services
      secretName: wildcard.hyde.services
  rules:
    # - host: voyager.wing.hyde.services
    #   http:
    #     paths:
    #       - path: /
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: wing-voyager
    #             port:
    #               number: 8080

    - host: discovery.wing.hyde.services
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: wing-discovery
                port:
                  number: 8080
